<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>garyfeng.github.io</title>
    <description>A blog for Gary.
</description>
    <link>http://garyfeng.github.io/</link>
    <atom:link href="http://garyfeng.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 27 Jun 2016 23:47:16 -0400</pubDate>
    <lastBuildDate>Mon, 27 Jun 2016 23:47:16 -0400</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>installing R kernal for iPython</title>
        <description>&lt;p&gt;Install the R kernal, see &lt;a href=&quot;https://irkernel.github.io/installation/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On OSX, make sure you open the R in termal, not in R Studio, which doesn’t honor &lt;code class=&quot;highlighter-rouge&quot;&gt;$PATH&lt;/code&gt; changes in &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;install.packages(c(&#39;repr&#39;, &#39;pbdZMQ&#39;, &#39;devtools&#39;)) # repr is already on CRAN
devtools::install_github(&#39;IRkernel/IRdisplay&#39;)
devtools::install_github(&#39;IRkernel/IRkernel&#39;)
IRkernel::installspec()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then restart or refresh the browser. It worked for me.&lt;/p&gt;
</description>
        <pubDate>Mon, 27 Jun 2016 19:47:15 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/installing-r-kernal-for-ipython.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/installing-r-kernal-for-ipython.html</guid>
        
        <category>python</category>
        
        <category>R</category>
        
        
      </item>
    
      <item>
        <title>installing HDFStore</title>
        <description>&lt;p&gt;Trying to read and process eye-tracking data currently stored in the HDF5 format. Pandas supports &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/io.html#io-hdf5&quot;&gt;HDFStore&lt;/a&gt;, see &lt;a href=&quot;http://glowingpython.blogspot.com/2014/08/quick-hdf5-with-pandas.html&quot;&gt;also here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The problem is that somehow the python/anaconda installation on my mac is out of date or out of sync. It won’t read the .hdf5 file, complaining the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import pandas as pd
p&amp;gt;&amp;gt;&amp;gt; pd.HDFStore(&quot;test.hdf5&quot;)
Traceback (most recent call last):
  File &quot;&amp;lt;stdin&amp;gt;&quot;, line 1, in &amp;lt;module&amp;gt;
  File &quot;/Users/garyfeng/anaconda/lib/python2.7/site-packages/pandas/io/pytables.py&quot;, line 389, in __init__
    &#39;importing&#39;.format(ex=str(ex)))
ImportError: HDFStore requires PyTables, &quot;dlopen(/Users/garyfeng/anaconda/lib/python2.7/site-packages/tables/utilsextension.so, 2): Library not loaded: @rpath/./libhdf5.10.dylib
  Referenced from: /Users/garyfeng/anaconda/lib/python2.7/site-packages/tables/utilsextension.so
  Reason: image not found&quot; problem importing
&amp;gt;&amp;gt;&amp;gt; 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So I thought I’d reinstall PyTabls, using:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew tap homebrew/science
brew install hdf5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This installed hdf5 version &lt;code class=&quot;highlighter-rouge&quot;&gt;1.8.16&lt;/code&gt;, after which python complains that hdf5 version conflicts – between &lt;code class=&quot;highlighter-rouge&quot;&gt;1.8.15_patch1&lt;/code&gt; and the newly installed &lt;code class=&quot;highlighter-rouge&quot;&gt;1.8.16&lt;/code&gt;. So I had to downgrade. &lt;/p&gt;

&lt;p&gt;Found the &lt;code class=&quot;highlighter-rouge&quot;&gt;hdf5.rb&lt;/code&gt; old version at &lt;a href=&quot;https://raw.githubusercontent.com/Homebrew/homebrew-science/80f77e2ab89da3351c91af93fcf1f8c40b858628/hdf5.rb&quot;&gt;https://raw.githubusercontent.com/Homebrew/homebrew-science/80f77e2ab89da3351c91af93fcf1f8c40b858628/hdf5.rb&lt;/a&gt;. Copy the content. &lt;/p&gt;

&lt;p&gt;Edit &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/Library/Taps/homebrew/homebrew-science/hdf5.rb&lt;/code&gt;, which after &lt;code class=&quot;highlighter-rouge&quot;&gt;brew tap&lt;/code&gt; is of version &lt;code class=&quot;highlighter-rouge&quot;&gt;1.8.16&lt;/code&gt;. Paste in the above older version, and make the following changes at the very top:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Hdf5 &amp;lt; Formula
  desc &quot;File format designed to store large amounts of data&quot;
  homepage &quot;http://www.hdfgroup.org/HDF5&quot;
  url &quot;https://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.5-patch1/src/hdf5-1.8.15-patch1.tar.bz2&quot;
  version &quot;1.8.15&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Save. Then back in terminal, do:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew unlink hdf5
brew install hdf5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This now installs the older version &lt;code class=&quot;highlighter-rouge&quot;&gt;1.8.15&lt;/code&gt;. It also warns that we don’t have &lt;code class=&quot;highlighter-rouge&quot;&gt;sha256&lt;/code&gt;. It reminds us the SHA256:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Hdf5 &amp;lt; Formula
  desc &quot;File format designed to store large amounts of data&quot;
  homepage &quot;http://www.hdfgroup.org/HDF5&quot;
  url &quot;https://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.5-patch1/src/hdf5-1.8.15-patch1.tar.bz2&quot;
  version &quot;1.8.15&quot;
  sha256 &quot;1028be671e24dcd9826d3eabe6c0ebe674282368689dcf0f6bb5926bc8d3be25&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Done. However, &lt;code class=&quot;highlighter-rouge&quot;&gt;PyTables&lt;/code&gt; still doesn’t run. At least we have got HDF5 running. &lt;/p&gt;

&lt;p&gt;After this, I renamed the &lt;code class=&quot;highlighter-rouge&quot;&gt;hdf5.rb&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;hdf5.1.8.15.rb&lt;/code&gt;, and restored the &lt;code class=&quot;highlighter-rouge&quot;&gt;v1.8.16&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;hdf5.rb&lt;/code&gt;. &lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jun 2016 20:48:40 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/installing-hdfstore.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/installing-hdfstore.html</guid>
        
        <category>python</category>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>Jupyter Notebook unit testing</title>
        <description>&lt;p&gt;Thinking how to develop a python library for PDiA but in Jupyter notebooks where I can actually document using literate programing. I’d like to keep the code and the unit test in the same notebook, so that i can test when I want, but also can run a unittest later.&lt;/p&gt;

&lt;p&gt;So far the solution I like the most is &lt;a href=&quot;https://github.com/JoaoFelipe/ipython-unittest&quot;&gt;https://github.com/JoaoFelipe/ipython-unittest&lt;/a&gt; which adds 3 ipython cell magics that make a lot of sense. &lt;/p&gt;

&lt;p&gt;Other solutions at the top of google search dont seem to fit what I need. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://zonca.github.io/2014/09/unit-tests-ipython-notebook.html&quot;&gt;https://zonca.github.io/2014/09/unit-tests-ipython-notebook.html&lt;/a&gt; requires &lt;code class=&quot;highlighter-rouge&quot;&gt;test*.ipynb&lt;/code&gt; that are separate from the actual code.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://docs.python-guide.org/en/latest/writing/tests/&quot;&gt;http://docs.python-guide.org/en/latest/writing/tests/&lt;/a&gt; is a general intro to python unittesting&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 18 Jun 2016 20:16:40 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/jupyter-notebook-unit-testing.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/jupyter-notebook-unit-testing.html</guid>
        
        <category>python</category>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>Literate programming, this time notedown</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/aaren/notedown&quot;&gt;Notedown&lt;/a&gt; converts Rmarkdown and iPythonNotebooks to markdown with code blocks. Which presumably can be used for blogging. &lt;/p&gt;

</description>
        <pubDate>Sat, 18 Jun 2016 19:56:48 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/literate-programming-this-time-notedown.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/literate-programming-this-time-notedown.html</guid>
        
        <category>programming</category>
        
        <category>markdown</category>
        
        
      </item>
    
      <item>
        <title>Notedown Example</title>
        <description>&lt;p&gt;The following is an output, from within a Jupyter Notebook. &lt;/p&gt;

&lt;p&gt;It looks great on github, viewed as a markdown file. However, code blocks look terrible on the Jekyle blog site. The problems seem to have to do with the failure to process the ` ```{.python .input  n=53}` code. &lt;/p&gt;

&lt;p&gt;Looking at Jekyl’s &lt;a href=&quot;https://jekyllrb.com/docs/posts/#highlighting-code-snippets&quot;&gt;document&lt;/a&gt; page, I need a different syntax to mark the code blocks.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;parsing-json-strings-in-pandas&quot;&gt;Parsing JSON strings in Pandas&lt;/h1&gt;

&lt;p&gt;Gary Feng,
Princeton, NJ
May, 2016&lt;/p&gt;

&lt;h1 id=&quot;tocheading&quot;&gt;Table of Contents&lt;/h1&gt;
&lt;div id=&quot;toc&quot;&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%%javascript
$.getScript(&#39;https://kmahelona.github.io/ipython_notebook_goodies/ipython_notebook_toc.js&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[
 {
  &quot;data&quot;: {
   &quot;application/javascript&quot;: &quot;$.getScript(&#39;https://kmahelona.github.io/ipython_notebook_goodies/ipython_notebook_toc.js&#39;)&quot;,
   &quot;text/plain&quot;: &quot;&amp;lt;IPython.core.display.Javascript object&amp;gt;&quot;
  },
  &quot;metadata&quot;: {},
  &quot;output_type&quot;: &quot;display_data&quot;
 }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;In the 2015/16 NAEP process data scheme there is a compromise in the data
structure, where we needed to keep complex (hierarchical) information about the
state of objects in a single SQL string field. To the extend we can, we used
JSON to encode the data. The question is how to efficiently decode the data for
analysis.&lt;/p&gt;

&lt;h1 id=&quot;loading-json-to-dict&quot;&gt;Loading JSON to dict&lt;/h1&gt;

&lt;p&gt;Here we compare two ways to convert the JSON string to a dict.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;JSON: http://stackoverflow.com/questions/19483351/converting-json-string-to-
dictionary-not-list-python&lt;/li&gt;
  &lt;li&gt;AST: http://stackoverflow.com/questions/15197673/using-pythons-eval-vs-ast-
literal-eval&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is one example keystroke datum. The eNAEP system somehow doubled the
double-quote in the JSON so we have to clear that first. We create 2 versions,
one with the original “true” and the other replacing it with “True”, because the
JSON method requires &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; while the AST method requires &lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kstr = &#39;{\
    &quot;&quot;name&quot;&quot;:&quot;&quot;text.change&quot;&quot;,\
    &quot;&quot;textDiff&quot;&quot;:{\
        &quot;&quot;diffs&quot;&quot;:[{&quot;&quot;edit&quot;&quot;:&quot;&quot;INS&quot;&quot;,&quot;&quot;pos&quot;&quot;:1,&quot;&quot;len&quot;&quot;:1,&quot;&quot;text&quot;&quot;:&quot;&quot;m&quot;&quot;}],\
        &quot;&quot;textContext&quot;&quot;:&quot;&quot;m^ &quot;&quot;,\
        &quot;&quot;textLength&quot;&quot;:3},\
        &quot;&quot;selection&quot;&quot;:{\
            &quot;&quot;selectedText&quot;&quot;:&quot;&quot;&quot;&quot;,\
            &quot;&quot;startPos&quot;&quot;:1,\
            &quot;&quot;endPos&quot;&quot;:1,\
            &quot;&quot;lenSelected&quot;&quot;:0,\
            &quot;&quot;textSelected&quot;&quot;:&quot;&quot;&quot;&quot;,\
            &quot;&quot;isCollapsed&quot;&quot;:true\
        }\
    }&#39;
# we create 2 versions, one with the original &quot;true&quot; and the other replacing it with &quot;True&quot;
s1 = kstr.replace(&quot;\&quot;\&quot;&quot;, &quot;\&quot;&quot;)
print s1
s2 = kstr.replace(&quot;\&quot;\&quot;&quot;, &quot;\&quot;&quot;).replace(&quot;true&quot;, &quot;True&quot;)
print s2

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stream&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{    \&quot;name\&quot;:\&quot;text.change\&quot;,    \&quot;textDiff\&quot;:{        \&quot;diffs\&quot;:[{\&quot;edit\&quot;:\&quot;INS\&quot;,\&quot;pos\&quot;:1,\&quot;len\&quot;:1,\&quot;text\&quot;:\&quot;m\&quot;}],        \&quot;textContext\&quot;:\&quot;m^ \&quot;,        \&quot;textLength\&quot;:3},        \&quot;selection\&quot;:{            \&quot;selectedText\&quot;:\&quot;\&quot;,            \&quot;startPos\&quot;:1,            \&quot;endPos\&quot;:1,            \&quot;lenSelected\&quot;:0,            \&quot;textSelected\&quot;:\&quot;\&quot;,            \&quot;isCollapsed\&quot;:true        }    }\n{    \&quot;name\&quot;:\&quot;text.change\&quot;,    \&quot;textDiff\&quot;:{        \&quot;diffs\&quot;:[{\&quot;edit\&quot;:\&quot;INS\&quot;,\&quot;pos\&quot;:1,\&quot;len\&quot;:1,\&quot;text\&quot;:\&quot;m\&quot;}],        \&quot;textContext\&quot;:\&quot;m^ \&quot;,        \&quot;textLength\&quot;:3},        \&quot;selection\&quot;:{            \&quot;selectedText\&quot;:\&quot;\&quot;,            \&quot;startPos\&quot;:1,            \&quot;endPos\&quot;:1,            \&quot;lenSelected\&quot;:0,            \&quot;textSelected\&quot;:\&quot;\&quot;,            \&quot;isCollapsed\&quot;:True        }    }\n&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;json&quot;&gt;JSON&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.python&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;json.loads(s&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;textDiff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;textContext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;u&#39;m^ &#39;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;execution_count&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;metadata&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;execute_result&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.python&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%timeit&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;json.loads(s&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stream&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;100000 loops, best of 3: 11.8 \u00b5s per loop\n&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;ast-literaleval&quot;&gt;AST .literal_eval()&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.python&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ast&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a=ast.literal_eval(s&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;textDiff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;textContext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text/plain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&#39;m^ &#39;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;execution_count&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;metadata&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;execute_result&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.python&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%timeit&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;ast.literal_eval(s&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stream&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10000 loops, best of 3: 60.8 \u00b5s per loop\n&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;AST is about &lt;strong&gt;6x&lt;/strong&gt; slower. JSON wins, and we don’t need to convert &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt; to
&lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Looking forward, here’s probably how we are going to use it in Pandas:&lt;/p&gt;

&lt;p&gt;```{.python .input  n=9}
import pandas as pd&lt;/p&gt;

&lt;p&gt;ps = pd.Series([json.loads(s1), ast.literal_eval(s2)])
print ps
print “Accessing individual elements”
print ps.loc[0][“textDiff”][“textContext”]
print “\nGetting elements in as a Pandas Series”
print ps.apply(lambda x: x[“textDiff”][“textContext”])
```&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stream&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0    {u&#39;selection&#39;: {u&#39;isCollapsed&#39;: True, u&#39;lenSel...\n1    {u&#39;selection&#39;: {u&#39;isCollapsed&#39;: True, u&#39;lenSel...\ndtype: object\nAccessing individual elements\nm^ \n\nGetting elements in as a Pandas Series\n0    m^ \n1    m^ \ndtype: object\n&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This also suggests that I should parse all &lt;code class=&quot;highlighter-rouge&quot;&gt;ExtendedInfo&lt;/code&gt; entry into objects so
that I can access later.&lt;/p&gt;

&lt;h1 id=&quot;retrieving-info-from-a-dict&quot;&gt;Retrieving info from a dict&lt;/h1&gt;

&lt;p&gt;Since we have nested data structure in JSON converted into a nested dict,
accessing it becomes a bit more complex. Here we compare the speed different
algorithms. It comes down to a trade off between &lt;strong&gt;speed&lt;/strong&gt; and the
&lt;strong&gt;expressiveness&lt;/strong&gt; of the method of data access.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Native python: &lt;code class=&quot;highlighter-rouge&quot;&gt;a[&quot;textDiff&quot;][&quot;textContext&quot;]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;A path-like expression using &lt;code class=&quot;highlighter-rouge&quot;&gt;dpath&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;dpath.util.get(j,
&#39;textDiff/textContext&#39;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;A XPath-like full-featured expression using &lt;code class=&quot;highlighter-rouge&quot;&gt;jsonpath_rw&lt;/code&gt;:
&lt;code class=&quot;highlighter-rouge&quot;&gt;parse(&#39;textDiff.textContext&#39;).find(j)[0].value&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;```{.python .input  n=47}
# install libraries
! pip install jsonpath-rw
! pip install dpath
from jsonpath_rw import jsonpath, parse
# [match.value for match in parse(‘textDiff.diffs.[*].len’).find(j)]
import dpath.util&lt;/p&gt;

&lt;h1 id=&quot;for-jsonpathrw&quot;&gt;for jsonpath_rw&lt;/h1&gt;
&lt;p&gt;def getVal(json, key):
    # make sure this is JSON
    # parse(‘textDiff.diffs.[*].len’).find(j)[0].value
    try:
        res = parse(key).find(json)[0].value
    except:
        res = None
    return res&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
```{.json .output n=47}
[
 {
  &quot;name&quot;: &quot;stdout&quot;,
  &quot;output_type&quot;: &quot;stream&quot;,
  &quot;text&quot;: &quot;Requirement already satisfied (use --upgrade to upgrade): jsonpath-rw in /Users/garyfeng/anaconda/lib/python2.7/site-packages\nRequirement already satisfied (use --upgrade to upgrade): ply in /Users/garyfeng/anaconda/lib/python2.7/site-packages (from jsonpath-rw)\nRequirement already satisfied (use --upgrade to upgrade): decorator in /Users/garyfeng/anaconda/lib/python2.7/site-packages (from jsonpath-rw)\nRequirement already satisfied (use --upgrade to upgrade): six in /Users/garyfeng/anaconda/lib/python2.7/site-packages/six-1.10.0-py2.7.egg (from jsonpath-rw)\nCleaning up...\nRequirement already satisfied (use --upgrade to upgrade): dpath in /Users/garyfeng/anaconda/lib/python2.7/site-packages\nCleaning up...\n&quot;
 }
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;dict&quot;&gt;dict&lt;/h2&gt;

&lt;p&gt;First, after json parsing &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; is simple a dict. Let’s time the good-o python
dict access. Result is typically in the 100 nano-seconds.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.python&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%timeit&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;textDiff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stream&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The slowest run took 27.37 times longer than the fastest. This could mean that an intermediate result is being cached \n10000000 loops, best of 3: 113 ns per loop\n&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;dpath&quot;&gt;dpath&lt;/h2&gt;
&lt;p&gt;Next, let’s use the &lt;code class=&quot;highlighter-rouge&quot;&gt;dpath&lt;/code&gt; library. Typically in the 100 micro-seconds, or
&lt;strong&gt;1,000x slower&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.python&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%timeit&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;dpath.util.get(j,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;textDiff&#39;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stream&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The slowest run took 16.18 times longer than the fastest. This could mean that an intermediate result is being cached \n10000 loops, best of 3: 104 \u00b5s per loop\n&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;jsonpathrw&quot;&gt;jsonpath_rw&lt;/h2&gt;
&lt;p&gt;Using the full-featured &lt;code class=&quot;highlighter-rouge&quot;&gt;jsonpath_rw&lt;/code&gt; is in the 6 ms range, or 60x slower than
&lt;code class=&quot;highlighter-rouge&quot;&gt;dpath&lt;/code&gt;, or &lt;strong&gt;60,000x slower than &lt;code class=&quot;highlighter-rouge&quot;&gt;dict&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.python&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%timeit&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;parse(&#39;textDiff.textContext&#39;).find(j)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stream&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The slowest run took 8.60 times longer than the fastest. This could mean that an intermediate result is being cached \n100 loops, best of 3: 6.51 ms per loop\n&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion-1&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;dict&lt;/code&gt; method as much as we can for performance, unless we really need
the flexibility of &lt;code class=&quot;highlighter-rouge&quot;&gt;dpath&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;jsonpath_rw&lt;/code&gt; is nice but probably not necessary.&lt;/p&gt;

&lt;h1 id=&quot;try-notedown&quot;&gt;Try notedown&lt;/h1&gt;

&lt;p&gt;Compile this iPynb into markdown, using &lt;code class=&quot;highlighter-rouge&quot;&gt;notedown&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.python&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.input&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;pip&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;notedown&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;notedown&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Parsing JSON strings in Pandas.ipynb&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;--to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2016-06-17-notedown example.md&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;n=54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stdout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;output_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stream&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Downloading/unpacking notedown\n  Downloading notedown-1.5.0.tar.gz\n  Running setup.py (path:/private/var/folders/bg/4qvb4_0573v7j7j71bwk16dc0000gp/T/pip_build_garyfeng/notedown/setup.py) egg_info for package notedown\n    \nRequirement already satisfied (use --upgrade to upgrade): nbformat in /Users/garyfeng/anaconda/lib/python2.7/site-packages (from notedown)\nRequirement already satisfied (use --upgrade to upgrade): nbconvert in /Users/garyfeng/anaconda/lib/python2.7/site-packages (from notedown)\nRequirement already satisfied (use --upgrade to upgrade): ipython in /Users/garyfeng/anaconda/lib/python2.7/site-packages (from notedown)\nDownloading/unpacking pandoc-attributes (from notedown)\n  Downloading pandoc-attributes-0.1.7.tar.gz\n  Running setup.py (path:/private/var/folders/bg/4qvb4_0573v7j7j71bwk16dc0000gp/T/pip_build_garyfeng/pandoc-attributes/setup.py) egg_info for package pandoc-attributes\n    \nRequirement already satisfied (use --upgrade to upgrade): six in /Users/garyfeng/anaconda/lib/python2.7/site-packages/six-1.10.0-py2.7.egg (from notedown)\nDownloading/unpacking pandocfilters (from pandoc-attributes-&amp;gt;notedown)\n  Downloading pandocfilters-1.3.0.tar.gz\n  Running setup.py (path:/private/var/folders/bg/4qvb4_0573v7j7j71bwk16dc0000gp/T/pip_build_garyfeng/pandocfilters/setup.py) egg_info for package pandocfilters\n    \nInstalling collected packages: notedown, pandoc-attributes, pandocfilters\n  Running setup.py install for notedown\n    \n    Installing notedown script to /Users/garyfeng/anaconda/bin\n  Running setup.py install for pandoc-attributes\n    \n  Running setup.py install for pandocfilters\n    \nSuccessfully installed notedown pandoc-attributes pandocfilters\nCleaning up...\n&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 17 Jun 2016 11:32:34 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/notedown-example.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/notedown-example.html</guid>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>Literate programming, or litpro</title>
        <description>&lt;p&gt;I used to use &lt;a href=&quot;https://github.com/jostylr/literate-programming&quot;&gt;literate-programming&lt;/a&gt; but the author has moved to &lt;a href=&quot;https://github.com/jostylr/litpro&quot;&gt;litpro&lt;/a&gt;. Need to update my workflow. &lt;/p&gt;
</description>
        <pubDate>Thu, 16 Jun 2016 11:32:34 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/literate-programming-or-litpro.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/literate-programming-or-litpro.html</guid>
        
        <category>programming</category>
        
        
      </item>
    
      <item>
        <title>RSA ... animated storytelling</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=cqw70hT_ANU&amp;amp;feature=youtu.be&quot;&gt;RSA’s animated storytelling&lt;/a&gt; is impressive, but if it’s all manual drawing, it’s hard to replicate. At least not for me. &lt;/p&gt;
</description>
        <pubDate>Mon, 06 Jun 2016 11:53:51 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/rsa-animated-storytelling.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/rsa-animated-storytelling.html</guid>
        
        <category>viz</category>
        
        
      </item>
    
      <item>
        <title>Hacking plotly ... getting ready</title>
        <description>&lt;p&gt;Getting ready to implement the image overlay in &lt;a href=&quot;http://garyfeng.github.io/2016/06/plot-ly-transparent-image-background-my-hacks.html&quot;&gt;plot.ly&lt;/a&gt;. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Forked the main &lt;a href=&quot;https://github.com/plotly/plotly.js&quot;&gt;plotly.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Forked the &lt;a href=&quot;https://github.com/plotly/plotly.py&quot;&gt;plotly.py&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Forked the &lt;a href=&quot;https://github.com/ropensci/plotly&quot;&gt;R interface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Target is to implement the transparent image in plot_api.js, see example &lt;a href=&quot;https://gist.github.com/garyfeng/9516714839c84a1982dda74dd5f14a6c&quot;&gt;gist&lt;/a&gt;. We will report back how it works. &lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jun 2016 10:33:58 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/hacking-plotly-getting-ready.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/hacking-plotly-getting-ready.html</guid>
        
        <category>viz</category>
        
        <category>github</category>
        
        
      </item>
    
      <item>
        <title>plot.ly transparent image background, my hacks</title>
        <description>&lt;p&gt;Plot.ly does not yet support transparent image overlays in their output, see &lt;a href=&quot;http://garyfeng.github.io/2016/06/background-images-in-plot-ly.html&quot;&gt;this&lt;/a&gt; and &lt;a href=&quot;http://garyfeng.github.io/2016/06/background-images-in-plot-ly-coming-soon.html&quot;&gt;that&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My hack starts with the SVG output:&lt;/p&gt;

&lt;p&gt;Adding a transparent background image to Plot.ly’s SVG output. Two changes: (a) set opacity in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;g class=&quot;subplot xy&quot; style = &quot;opacity:0.5&quot;&amp;gt;&lt;/code&gt;, and (b) adding an image in the &lt;code class=&quot;highlighter-rouge&quot;&gt;layer-below &amp;gt;&amp;gt; imagelayer&lt;/code&gt; group.&lt;/p&gt;

&lt;p&gt;See the &lt;a href=&quot;https://gist.github.com/garyfeng/9516714839c84a1982dda74dd5f14a6c&quot;&gt;public gist&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Implementation thoughts:&lt;/p&gt;

&lt;p&gt;Add the following to plotly’s &lt;a href=&quot;https://github.com/plotly/plotly.js/blob/3b5178c0441ad046118f0688026bb9486df80d9e/src/plot_api/plot_api.js&quot;&gt;plot_api.js function&lt;/a&gt;, somewhere around line &lt;code class=&quot;highlighter-rouge&quot;&gt;2756&lt;/code&gt;. Add the option for the transparent background image, an opacity parameter, and make sure to adjust the size to fit. &lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 05:47:32 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/plot-ly-transparent-image-background-my-hacks.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/plot-ly-transparent-image-background-my-hacks.html</guid>
        
        <category>viz</category>
        
        
      </item>
    
      <item>
        <title>Webcam-based eye-trackers, gazeRecorder</title>
        <description>&lt;p&gt;Forgot to mention &lt;a href=&quot;https://sourceforge.net/projects/gazerecorder/&quot;&gt;gazeRecorder&lt;/a&gt; and the &lt;a href=&quot;https://www.facebook.com/gazerecorder/&quot;&gt;facebook&lt;/a&gt;, there is the 2013 paper(?) comparing it with Tobii … not open source. &lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 05:08:10 -0400</pubDate>
        <link>http://garyfeng.github.io/2016/06/webcam-based-eye-trackers-gazerecorder.html</link>
        <guid isPermaLink="true">http://garyfeng.github.io/2016/06/webcam-based-eye-trackers-gazerecorder.html</guid>
        
        <category>eye-tracking</category>
        
        
      </item>
    
  </channel>
</rss>
